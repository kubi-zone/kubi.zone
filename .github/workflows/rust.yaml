on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: Test, Build, Publish

jobs:
  lint:
    name: Linting (rustfmt + clippy)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt,clippy

      - name: Run rustfmt
        run: cargo fmt --all -- --check
      
      - name: Run clippy
        run: cargo clippy --all-features

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      
      - name: Run cargo test
        run: cargo test --workspace --all-features
  
  check-crds:
    name: Ensure CRDs up to date
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@master

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
      
      - name: Dump CRDs and check diff
        run: cargo run --bin crd-utils -- dump && git diff --exit-code

  publish-crds:
    needs: [lint, test, check-crds]
    name: Publish CRDs
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate:
          - kubizone-crds
          - zonefile-crds
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Publish crate to crates.io
        run: cargo publish --package ${{ matrix.crate }} --token ${{ secrets.CARGO_LOGIN_TOKEN }}
  
  build-operators:
    needs: [lint, test, check-crds]
    name: Build Operators
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      matrix:
        crate:
          - kubizone
          - zonefile
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: set up qemu
        uses: docker/setup-qemu-action@v3

      - name: set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: login to github packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Crate Version
        id: crate-version
        uses: colathro/crate-version@1.0.0
        with:
          file: "${{ matrix.crate }}/Cargo.toml"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ github.repository_owner }}/${{ matrix.crate }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=sha
            v${{ steps.crate-version.outputs.version }}
            latest

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.crate }}:buildcache
          cache-to: type=registry,ref=ghcr.io/${{ github.repository_owner }}/${{ matrix.crate }}:buildcache,mode=max
